{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "CRMBaseURL": {
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "metadata": { "description": "CRM Org url e.g., https://xxxx.crm.dynamics.com" }
    },
    "CRMUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": { "description": "Enter the CRM User name which will be used to login to CRM having admin privileges" }
    },
    "CRMPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": { "description": "Enter the Password of the CRM User name" }
    },
    "WebAPPClientId": {
      "type": "string",
      "minLength": 1,
      "metadata": { "description": "Enter the web app applicatoin id generated by AAD Registration tool" }
    },
    "WebAPPSecret": {
      "type": "securestring",
      "minLength": 1,
      "metadata": { "description": "Enter the Web application secret key generated by AAD Registration tool" }
    },
    "WebAPPObjectId": {
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "metadata": { "description": "Enter the object id generated by AAD Registration tool" }
    },
    "NativeAPPClientId": {
      "type": "string",
      "minLength": 1,
      "metadata": { "description": "Enter the NativeAPPClientId generated by AAD Registration tool" }
    },
    "DataCatalogClientId": {
      "type": "string",
      "minLength": 1,
      "metadata": { "description": "Enter the Data Catalog ClientID" }
    },
    "DataCatalogName": {
      "type": "string",
      "minLength": 1,
      "metadata": { "description": "Enter the Data Catalog Name" }
    },
    "DataCatalogSecret": {
      "type": "securestring",
      "minLength": 1,
      "metadata": { "description": "Enter the Data Catalog secret" }
    },
    "DataCatalogTenantId": {
      "type": "string",
      "minLength": 1,
      "metadata": { "description": "Enter the Data Catalog TenentID" }
    },
    "webSiteName": {
      "type": "string",
      "defaultValue": "ObfuscationWebApp",
      "maxLength": 50,
      "minLength": 1,
      "metadata": { "description": "Enter the name you wish to give to the web site, Do not enter the name that already exists." }
    },
    "KeyVaultName": {
      "type": "string",
      "defaultValue": "obskeyvault",
      "maxLength": 50,
      "minLength": 1,
      "metadata": { "description": "Enter the name you wish to give to the keyvalut, Do not enter the name that already exists." }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "obfuscationstorageacc",
      "maxLength": 50,
      "minLength": 1,
      "metadata": { "description": "Enter the name you wish to give to the Storage account, Do not enter the name that already exists." }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [ "Standard_LRS", "Standard_ZRS", "Standard_GRS", "Standard_RAGRS", "Premium_LRS" ],
      "defaultValue": "Standard_LRS",
      "minLength": 1,
      "metadata": { "description": "Select the Storage Account Type from available list" }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "ObfuscationFunctionApp",
      "maxLength": 50,
      "minLength": 1,
      "metadata": { "description": "Enter the name you wish to give to the Function App, Do not enter the name that already exists." }
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "ObfuscationAppServicePlan",
      "maxLength": 50,
      "minLength": 1,
      "metadata": { "description": "Enter the name you wish to give to the App Service Plan, Do not enter the name that already exists." }
    },
    "skuName": {
      "type": "string",
      "allowedValues": [ "B1", "B2", "B3", "S1", "S2", "S3", "P1", "P2", "P3", "P4" ],
      "defaultValue": "S3",
      "minLength": 1,
      "metadata": { "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/" }
    },
    "skuCapacity": {
      "type": "int",
      "minValue": 1,
      "defaultValue": 1,
      "metadata": { "description": "Describes plan's instance count" }
    },
    "CRMAPIVersion": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "8.1",
      "allowedValues": [ "8.1", "8.2", "9.0" ],
      "metadata": { "description": "Select the version of CRM online that you are using" }
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "name": "[parameters('hostingPlanName')]",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "HostingPlan" },
      "properties": { "name": "[parameters('hostingPlanName')]" }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "storageaccount" },
      "properties": {
        "accountType": "[parameters('storageaccountType')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('KeyVaultName')]",
      "apiVersion": "2015-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('WebAPPObjectId')]",
            "permissions": {
              "keys": [ "all" ],
              "secrets": [ "all" ]
            }
          }
        ],
        "enabledForTemplateDeployment": true,
        "sku": {
          "name": "Standard",
          "family": "A"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','CRMAPIVersion')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('CRMAPIVersion')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','CRMBaseURL')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('CRMBaseURL')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','WebAPPClientId')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('WebAPPClientId')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','CRMPassword')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('CRMPassword')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','CRMUsername')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('CRMUsername')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','DataCatalogClientId')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('DataCatalogClientId')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','DataCatalogName')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('DataCatalogName')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','DataCatalogSecret')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('DataCatalogSecret')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','DataCatalogTenantId')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('DataCatalogTenantId')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','NativeAPPClientId')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('NativeAPPClientId')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','storageAccountName')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('storageAccountName')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','CloudStorageAccountKey')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('KeyVaultName'), '/','WebAPPSecret')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('WebAPPSecret')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
    },
    {
      "apiVersion": "2015-04-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('functionAppName')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "functionapp",
      "properties": {
        "name": "[parameters('functionAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "hostingEnvironment": "",
        "clientAffinityEnabled": false,
        "siteConfig": {
          "alwaysOn": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "resources": [
        {
          "apiVersion": "2016-03-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"           
          ],
          "properties": {
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-05-01-preview').key1,';')]",
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-05-01-preview').key1,';')]",
            "FUNCTIONS_EXTENSION_VERSION": "~1"
          }
        },
        {
          "comments": "CORS allow origins *.",
          "type": "Microsoft.Web/sites/config",
          "name": "[concat(parameters('functionAppName'), '/web')]",
          "apiVersion": "2016-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"         
          ],
          "properties": {
            "cors": {
              "allowedOrigins": [
                "*"
              ]

            }
          }
        }        
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[parameters('webSiteName')]",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
        "displayName": "Website"
      },
      "properties": {
        "name": "[parameters('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "siteConfig": {
          "phpVersion": "off",
          "alwaysOn": true,
          "connectionStrings": [
            {
              "ConnectionString": "[Concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
              "Name": "AzureWebJobsDashboard",
              "Type": 3
            },
            {
              "ConnectionString": "[Concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
              "Name": "AzureWebJobsStorage",
              "Type": 3
            }
          ],
          "appSettings": [
            {
              "Value": "0 20 */1 * * *",
              "Name": "WebJobSchedule"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "MSDeploy",
          "apiVersion": "2015-08-01",
          "location": "[resourceGroup().location]",
          "tags": { "displayName": "WebDeployforWebApp" },
          "properties": {
            "alwaysOn": true,
            "dbType": "None",
            "debugSetting": { "detailLevel": "requestContent, responseContent" },
            "packageUri": "https://github.com/JitendraMishra2010/CRMArchival/raw/master/Microsoft.Dynamics.Archival.D365WebApp.zip"
          },
          "dependsOn": [ "[concat('Microsoft.Web/sites/', parameters('webSiteName'))]" ]
        }
      ],
      "dependsOn": [ "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]", "[concat('Microsoft.Storage/storageAccounts/',parameters('storageAccountName'))]" ]
    }
  ]
}

