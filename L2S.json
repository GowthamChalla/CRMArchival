{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "CosmicL2SPortal",
      "minLength": 1
    },
    "skuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "administratorLogin": {
      "type": "string",
      "defaultValue": "v-chgowt@microsoft.com"
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "defaultValue": "password"
    },
    "databaseName": {
      "type": "string",
      "defaultValue": "sample"
    },
    "collation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "edition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "maxSizeBytes": {
      "type": "string",
      "defaultValue": "1073741824"
    },
    "requestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "KeyVaultName": {
      "type": "string",
      "defaultValue": "l2skeyvault",
      "maxLength": 50,
      "minLength": 1,
      "metadata": { "description": "Enter the name you wish to give to the keyvalut, Do not enter the name that already exists." }
    },
    "L2sdbConnectionString": {
      "type": "string",
      "defaultValue": "l2sdbconnectionstring",
      "maxLength": 50,
      "minLength": 1,
      "metadata": { "description": "Enter the name you wish to give to the DB connection string, Do not enter the connection string that already exists." }
    },
    "CosmicClientId": {
      "type": "string",
      "defaultValue": "2d00e71b-04bc-4b9d-86a9-88b577f089b6",
      "maxLength": 50,
      "minLength": 1,
      "metadata": { "description": "Enter the name you wish to give to the CosmicClientId string, Do not enter the CosmicClientId string that already exists." }
    },
    "CosmicClientSecret": {
      "type": "string",
      "defaultValue": "8qfdEXs8cbQ3iABxH/OvajnENuvQj+rKhWhkv1IQzX8=",
      "maxLength": 50,
      "minLength": 1,
      "metadata": { "description": "Enter the name you wish to give to the CosmicClientSecret string, Do not enter the CosmicClientSecret string that already exists." }
    },
    "CosmicAPIResource": {
      "type": "string",
      "defaultValue": "https://cosmicwebapiuat.azurewebsites.net",
      "maxLength": 50,
      "minLength": 1,
      "metadata": { "description": "Enter the name you wish to give to the CosmicAPIResource string, Do not enter the CosmicAPIResource string that already exists." }
    },
    "CosmicBaseUri": {
      "type": "string",
      "defaultValue": "https://cosmicwebapiuat.azurewebsites.net",
      "maxLength": 50,
      "minLength": 1,
      "metadata": { "description": "Enter the name you wish to give to the CosmicBaseUri string, Do not enter the CosmicBaseUri string that already exists." }
    },
    "WebAPIObjectId": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "faa1c3af-08ea-4c4d-85f8-2e1a69b3374f",
      "maxLength": 50,
      "metadata": { "description": "Enter the object id generated by AAD Registration tool" }
    },
    "CosmicL2SPortalName": {
      "type": "string",
      "defaultValue": "CosmicL2SPortal",
      "minLength": 1
    },
    "CosmicL2SPortalSkuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "WebSiteName": {
      "type": "string",
      "defaultValue": "L2SWebSite"
    },
    "SqlServerName": {
      "type": "string",
      "defaultValue": "L2SSQLServer"
    }

  },
  "variables": {},
  "resources": [
      {
      "name": "[parameters('SqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SqlServer"
      },
      "apiVersion": "2014-04-01-preview",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
      },
    },
    {
      "name": "[parameters('databaseName')]",
      "type": "Microsoft.Sql/servers/databases",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Database"
      },
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers/', parameters('SqlServerName'))]"
      ],
      "properties": {
        "edition": "[parameters('edition')]",
        "collation": "[parameters('collation')]",
        "maxSizeBytes": "[parameters('maxSizeBytes')]",
        "requestedServiceObjectiveName": "[parameters('requestedServiceObjectiveName')]"
      }
    },
      {
        "type": "Microsoft.Cache/Redis/firewallRules",
        "apiVersion": "2014-04-01-preview",
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers/', parameters('sqlserverName'))]"
        ],
        "location": "[resourceGroup().location]",
        "name": "allips",
        "properties": {
          "endIpAddress": "0.0.0.0",
          "startIpAddress": "0.0.0.0"
        }
      },   
      {
      "apiVersion": "2015-08-01",
      "name": "[parameters('WebSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "empty",
        "displayName": "Website"
      },
      "properties": {
        "name": "[parameters('WebSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "connectionstrings",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites/', parameters('WebSiteName'))]"
          ],
          "properties": {
            "DefaultConnection": {
              "value": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', parameters('SqlServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('administratorLogin'), '@', parameters('SqlServerName'), ';Password=', parameters('administratorLoginPassword'), ';')]",
              "type": "SQLServer"
            }
          }
        }
      ]
    },    
      {
        "apiVersion": "2014-04-01",
        "name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
        "type": "Microsoft.Insights/autoscalesettings",
        "location": "[resourceGroup().location]",
        "tags": {
          "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
          "displayName": "AutoScaleSettings"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
        ],
        "properties": {
          "profiles": [
            {
              "name": "Default",
              "capacity": {
                "minimum": 1,
                "maximum": 2,
                "default": 1
              },
              "rules": [
                {
                  "metricTrigger": {
                    "metricName": "CpuPercentage",
                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT10M",
                    "timeAggregation": "Average",
                    "operator": "GreaterThan",
                    "threshold": 80.0
                  },
                  "scaleAction": {
                    "direction": "Increase",
                    "type": "ChangeCount",
                    "value": 1,
                    "cooldown": "PT10M"
                  }
                },
                {
                  "metricTrigger": {
                    "metricName": "CpuPercentage",
                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT1H",
                    "timeAggregation": "Average",
                    "operator": "LessThan",
                    "threshold": 60.0
                  },
                  "scaleAction": {
                    "direction": "Decrease",
                    "type": "ChangeCount",
                    "value": 1,
                    "cooldown": "PT1H"
                  }
                }
              ]
            }
          ],
          "enabled": false,
          "name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
          "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
        }
      },    
      {
      "apiVersion": "2014-04-01",
      "name": "[concat('ServerErrors ', parameters('WebSiteName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/', parameters('WebSiteName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('WebSiteName'))]": "Resource",
        "displayName": "ServerErrorsAlertRule"
      },
      "properties": {
        "name": "[concat('ServerErrors ', parameters('WebSiteName'))]",
        "description": "[concat(parameters('WebSiteName'), ' has some server errors, status code 5xx.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('WebSiteName'))]",
            "metricName": "Http5xx"
          },
          "operator": "GreaterThan",
          "threshold": 0.0,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },   
      {
      "apiVersion": "2014-04-01",
      "name": "[concat('ForbiddenRequests ', parameters('WebSiteName'))]",
      "type": "Microsoft.Insights/alertrules",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/', parameters('WebSiteName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('WebSiteName'))]": "Resource",
        "displayName": "ForbiddenRequestsAlertRule"
      },
      "properties": {
        "name": "[concat('ForbiddenRequests ', parameters('WebSiteName'))]",
        "description": "[concat(parameters('WebSiteName'), ' has some requests that are forbidden, status code 403.')]",
        "isEnabled": false,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('WebSiteName'))]",
            "metricName": "Http403"
          },
          "operator": "GreaterThan",
          "threshold": 0,
          "windowSize": "PT5M"
        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": true,
          "customEmails": []
        }
      }
    },    
      {
        "apiVersion": "2014-04-01",
        "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
        "type": "Microsoft.Insights/alertrules",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
        ],
        "tags": {
          "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
          "displayName": "CPUHighAlertRule"
        },
        "properties": {
          "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
          "description": "[concat('The average CPU is high across all the instances of ', parameters('hostingPlanName'))]",
          "isEnabled": false,
          "condition": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
            "dataSource": {
              "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
              "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
              "metricName": "CpuPercentage"
            },
            "operator": "GreaterThan",
            "threshold": 90,
            "windowSize": "PT15M"
          },
          "action": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
            "sendToServiceOwners": true,
            "customEmails": []
          }
        }
      },     
      {
        "apiVersion": "2014-04-01",
        "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
        "type": "Microsoft.Insights/alertrules",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
        ],
        "tags": {
          "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
          "displayName": "AutoScaleSettings"
        },
        "properties": {
          "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
          "description": "[concat('The HTTP queue for the instances of ', parameters('hostingPlanName'), ' has a large number of pending requests.')]",
          "isEnabled": false,
          "condition": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
            "dataSource": {
              "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
              "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
              "metricName": "HttpQueueLength"
            },
            "operator": "GreaterThan",
            "threshold": 100.0,
            "windowSize": "PT5M"
          },
          "action": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
            "sendToServiceOwners": true,
            "customEmails": []
          }
        }
      },   
      {
      "apiVersion": "2014-04-01",
      "name": "[parameters('WebSiteName')]",
      "type": "Microsoft.Insights/components",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/', parameters('WebSiteName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('WebSiteName'))]": "Resource",
        "displayName": "AppInsightsComponent"
      },
      "properties": {
        "ApplicationId": "[parameters('WebSiteName')]"
      }
    },      
      {
        "type": "Microsoft.KeyVault/vaults",
        "name": "[parameters('KeyVaultName')]",
        "apiVersion": "2015-06-01",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "KeyVault"
        },
        "properties": {
          "tenantId": "[subscription().tenantId]",
          "accessPolicies": [
            {
              "tenantId": "[subscription().tenantId]",
              "objectId": "[parameters('WebAPIObjectId')]",
              "permissions": {
                "keys": [ "all" ],
                "secrets": [ "all" ]
              }
            }
          ],
          "enabledForTemplateDeployment": true,
          "sku": {
            "name": "Standard",
            "family": "A"
          }
        }
      },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "name": "[concat(parameters('KeyVaultName'), '/','L2sdbConnectionString')]",
        "apiVersion": "2015-06-01",
        "properties": {
          "contentType": "text/plain",
          "value": "[parameters('L2sdbConnectionString')]"
        },
        "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
      },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "name": "[concat(parameters('KeyVaultName'), '/','CosmicClientId')]",
        "apiVersion": "2015-06-01",
        "properties": {
          "contentType": "text/plain",
          "value": "[parameters('CosmicClientId')]"
        },
        "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
      },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "name": "[concat(parameters('KeyVaultName'), '/','CosmicClientSecret')]",
        "apiVersion": "2015-06-01",
        "properties": {
          "contentType": "text/plain",
          "value": "[parameters('CosmicClientSecret')]"
        },
        "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
      },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "name": "[concat(parameters('KeyVaultName'), '/','CosmicAPIResource')]",
        "apiVersion": "2015-06-01",
        "properties": {
          "contentType": "text/plain",
          "value": "[parameters('CosmicAPIResource')]"
        },
        "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
      },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "name": "[concat(parameters('KeyVaultName'), '/','CosmicBaseUri')]",
        "apiVersion": "2015-06-01",
        "properties": {
          "contentType": "text/plain",
          "value": "[parameters('CosmicBaseUri')]"
        },
        "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', parameters('KeyVaultName'))]" ]
      },
      {
        "name": "[parameters('CosmicL2SPortalName')]",
        "type": "Microsoft.Web/serverfarms",
        "location": "[resourceGroup().location]",
        "apiVersion": "2015-08-01",
        "sku": {
          "name": "[parameters('CosmicL2SPortalSkuName')]"
        },
        "dependsOn": [],
        "tags": {
          "displayName": "CosmicL2SPortal"
        },
        "properties": {
          "name": "[parameters('CosmicL2SPortalName')]",
          "numberOfWorkers": 1
        }
      }
      ]
    }