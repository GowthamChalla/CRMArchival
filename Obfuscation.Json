{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "CRMBaseURL": {
      "type": "String",
      "metadata": { "description": "CRM Org url e.g., https://xxxx.crm.dynamics.com" }
    },
    "CRMUsername": {
      "type": "String",
      "metadata": { "description": "Enter the CRM User name which will be used to login to CRM having admin privileges" }
    },
    "CRMPassword": {
      "type": "SecureString",
      "metadata": { "description": "Enter the Password of the CRM User name" }
    },    
    "CRMAPIVersion": {
      "defaultValue": "8.1",
      "allowedValues": [ "8.1", "8.2", "9.0" ],
      "type": "String",
      "metadata": { "description": "Select the version of CRM online that you are using" }
    },
    "webSiteName": {
      "type": "String",
      "defaultValue": "obfuscationWebApp",
      "metadata": { "description": "Enter the name you wish to give to the App Service, Do not enter the name that already exists." }
    },
    "keyVaultName": {
      "type": "String",
      "defaultValue": "obfuscationkeyvault",
      "metadata": { "description": "Enter the name you wish to give to the Key vault, Do not enter the name that already exists." }
    },
    "StorageAccountName": {
      "type": "String",
      "defaultValue": "obfuscationstorageacc",
      "metadata": { "description": "Enter the name you wish to give to the Storage account, Do not enter the name that already exists." }
    },
    "storageaccountType": {
      "defaultValue": "Standard_LRS",
      "allowedValues": [ "Standard_LRS", "Standard_ZRS", "Standard_GRS", "Standard_RAGRS", "Premium_LRS" ],
      "type": "String"
    },
    "WebAPIClientId": {
      "type": "String",
      "metadata": { "description": "Enter the Application Id of the Web app app that is registered in Azure Active Directory" }
    },
    "WebAPISecret": {
      "type": "SecureString",
      "metadata": { "description": "Enter the Web application secret key" }
    },
    "WebAPIObjectId": {
      "type": "String",
      "metadata": { "description": "Enter the Web application Object ID" }
    },
    "NativeClientId": {
      "type": "String",
      "metadata": { "description": "Enter the Native application ID that is registered in Azure Active Directory" }
    },
    "DataCatalogName": {
      "type": "String",
      "metadata": { "description": "Enter the Data Catalog Name" }
    },
    "DataCatalogClientId": {
      "type": "String",
      "metadata": { "description": "Enter the Data Catalog Client ID" }
    },
    "DataCatalogSecret": {
      "type": "SecureString",
      "metadata": { "description": "Enter the Data Catelog secret key" }
    },
    "DataCatalogTenantId": {
      "type": "String",
      "metadata": { "description": "Enter the Data Catelog Tenant ID" }
    },
    "hostingPlanName": {
      "minLength": 1,
      "type": "String",
      "defaultValue": "obfuscationAppPlan"
    },
    "skuName": {
      "defaultValue": "S3",
      "allowedValues": [ "B1", "B2", "B3", "S1", "S2", "S3", "P1", "P2", "P3", "P4" ],
      "type": "String",
      "metadata": { "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/" }
    },
    "skuCapacity": {
      "defaultValue": 1,
      "minValue": 1,
      "type": "Int",
      "metadata": { "description": "Describes plan's instance count" }
    }
  },
  "variables": {
    "webSiteName": "[parameters('webSiteName')]",
    "KeyVaultName": "[parameters('keyVaultName')]",
    "storageaccountName": "[parameters('storageAccountName')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "name": "[parameters('hostingPlanName')]",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "HostingPlan" },
      "properties": { "name": "[parameters('hostingPlanName')]" }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('StorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": { "displayName": "storageaccount" },
      "properties": { "accountType": "[parameters('storageaccountType')]" },
      "dependsOn": []
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('KeyVaultName')]",
      "apiVersion": "2015-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('WebAPIObjectId')]",
            "permissions": {
              "keys": [ "all" ],
              "secrets": [ "all" ]
            }
          }
        ],
        "enabledForTemplateDeployment": true,
        "sku": {
          "name": "Standard",
          "family": "A"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CRMAPIVersion')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('CRMAPIVersion')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CRMBaseURL')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('CRMBaseURL')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CRMClientId')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('WebAPIClientId')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CRMPassword')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('CRMPassword')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CRMUsername')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('CRMUsername')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','DataCatalogClientId')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('DataCatalogClientId')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','DataCatalogName')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('DataCatalogName')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','DataCatalogSecret')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('DataCatalogSecret')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','DataCatalogTenantId')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('DataCatalogTenantId')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','NativeClientId')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('NativeClientId')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','StorageAccountName')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[variables('StorageAccountName')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','CloudStorageAccountKey')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('KeyVaultName'), '/','WebAPISecret')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('WebAPISecret')]"
      },
      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]
    }
  ]
}
